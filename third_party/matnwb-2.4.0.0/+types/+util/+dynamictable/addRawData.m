function addRawData(DynamicTable, column, data)
%ADDRAWDATA Internal method for adding data to DynamicTable given column
% name, data and an optional index.
validateattributes(column, {'char'}, {'scalartext'});

% Don't set the data until after indices are updated.
if 8 == exist('types.hdmf_common.VectorData', 'class')
    VecData = types.hdmf_common.VectorData();
else
    VecData = types.core.VectorData();
end

VecData.description = sprintf('AUTOGENERATED description for column `%s`', column);
VecData.data = [];

if isprop(DynamicTable, column)
    if isempty(DynamicTable.(column))
        DynamicTable.(column) = VecData;
    end
    VecData = DynamicTable.(column);
elseif isKey(DynamicTable.vectordata, column)
    VecData = DynamicTable.vectordata.get(column);
else
    DynamicTable.vectordata.set(column, VecData);
end

index = types.util.dynamictable.getIndex(DynamicTable, column);
if size(data, 1) > 1 || ~isempty(index)
    if isempty(index)
        index = types.util.dynamictable.addVecInd(DynamicTable, column);
    end
    
    if isprop(DynamicTable, index)
        VecInd = DynamicTable.(index);
    elseif isprop(DynamicTable, 'vectorindex') % Schema < 2.3.0
        VecInd = DynamicTable.vectorindex.get(index);
    else
        VecInd = DynamicTable.vectordata.get(index);
    end
    
    raggedOffset = 0;
    if isa(VecInd.data, 'types.untyped.DataPipe') && 0 < VecInd.data.dims
        raggedOffset = double(VecInd.data.load(VecInd.data.dims));
    elseif ~isempty(VecInd.data)
        raggedOffset = double(VecInd.data(end));
    end
    
    raggedValue = raggedOffset + size(data, 1);
    if isa(VecInd.data, 'types.untyped.DataPipe')
        VecInd.data.append(raggedValue);
    else
        VecInd.data = [double(VecInd.data); raggedValue];
    end
end

if isa(VecData.data, 'types.untyped.DataPipe')
    VecData.data.append(data);
else
    if ischar(data)
        data = {data};
    end
    VecData.data = [VecData.data; data];
end
end